<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       	http://www.springframework.org/schema/security 
	    http://www.springframework.org/schema/security/spring-security.xsd">
	    
	<sec:global-method-security
		pre-post-annotations="enabled" secured-annotations="enabled">
	</sec:global-method-security>

<!--配置登录页面
        login-page：登录页面
    	authentication-failure-url ：登录失败后跳转的页面
    	default-target-url：缺省的登录成功后跳转的页面，但当前此处没有实际意义，因为这登录页面
    	index.html中通过“$.ajax” 发起的登录调用，成功后在“success”回调函数中通过“window.location.href = 'logon/prepare.do'”进行了跳转
    	login-processing-url：登录时表单提交地址，这个是spring框架中的controller
     -->
	<sec:http use-expressions="true" >
		<sec:csrf disabled="true" />
		<sec:remember-me />
		<sec:form-login authentication-failure-url="/loginFailure.html"
			login-page='/index.html' default-target-url='/login/success.do'
			username-parameter="username" password-parameter="password"
			login-processing-url="/login" />
		<sec:logout delete-cookies="JSESSIONID" logout-success-url="/index.html"
			logout-url="/logout" />

		<!-- spring security session管理 -->
		<sec:session-management
			session-fixation-protection="migrateSession"
			session-authentication-error-url="/sessionerror.html"
			invalid-session-url="/invalidSession.html">

			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</sec:session-management>
	</sec:http>
	
	<!-- spring security authentication管理 -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:password-encoder hash="md5" base64="true" />
			<sec:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select user_name,password,true from t_user where user_name=?"
				authorities-by-username-query="SELECT u.user_name,r.role_name FROM  t_user u LEFT JOIN t_role r ON u.role_id=r.role_id WHERE u.user_name=?" />
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>